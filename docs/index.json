[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/cli.js",
    "content": "#!/usr/bin/env node\n\nconst path = require('path');\nconst ST = require('./scripteasy');\n\n/** @type {Array<string>} */\nconst argv = process.argv.slice(2);\n\n/** @type {number} */\nconst commandIdx = argv.findIndex((arg) => arg.charAt(0) !== '-');\n\n/** @type {Array<string>} */\nconst easyArgv = commandIdx >= 0 ? argv.slice(0, commandIdx) : argv.slice();\n\n/** @type {Array<string>} */\nconst commandsArgv = argv.slice(commandIdx);\n\n/** @type {Array<Array<string>>} */\nconst commands = commandsArgv.join(' ')\n  .split(' -- ')\n  .filter(s => s.length)\n  .map(s => s.trim().split(' '));\n\n/** @type {object | string} */\nconst {scripteasy} = require(path.join(process.cwd(), 'package.json'));\n\nlet st;\n\n/**\n * Show the help message and exit\n */\nfunction help ()\n{\n  console.log(\n//------------------------------------------------------------------------------\n`scripteasy ${require('../package.json').version}\n\nUsage:\n--------\nez [opts] [[<script>] [args] [--]...]\n\n\nOptions:\n--------\n--help -h                 Show this message`\n//------------------------------------------------------------------------------\n  );\n  process.exit(0);\n}\n\nif (easyArgv.length) {\n  const minimist = require('minimist');\n  const argv = minimist(easyArgv);\n  if (argv.help || argv.h) help();\n}\n\nif (commands.length == 0) {\n  help();\n}\n\nif (typeof scripteasy === 'string') {\n  st = ST.fromFile(scripteasy);\n}\nelse {\n  st = new ST(scripteasy);\n}\n\nfor (let command of commands) {\n  const args = command.slice(1);\n  const err = st.run(command[0], args);\n  if (err) {\n    console.error(`Error executing script '${command}' - \"${err.message}\"`);\n    process.exit(err.status);\n    break;\n  }\n}\n",
    "static": true,
    "longname": "/mnt/fast/Projects/scripteasy/src/cli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "argv",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~argv",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "commandIdx",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~commandIdx",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "easyArgv",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~easyArgv",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "commandsArgv",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~commandsArgv",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "commands",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~commands",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Array<Array<string>>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "scripteasy",
    "memberof": "src/cli.js",
    "static": true,
    "longname": "src/cli.js~scripteasy",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "object ",
        " string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "help",
    "memberof": "src/cli.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli.js~help",
    "access": "public",
    "export": false,
    "importPath": "scripteasy/src/cli.js",
    "importStyle": null,
    "description": "Show the help message and exit",
    "lineNumber": 32,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/control.js",
    "content": "exports.Control = class Control\n{\n  constructor (type, commands)\n  {\n    this.type = type;\n    if (typeof commands === 'string') {\n      if (type == 'command') this.commands = commands;\n      else this.commands = Control.fromObject(commands);\n    }\n    else {\n      this.commands = Control.fromObject(commands);\n    }\n  }\n\n  static fromObject (obj)\n  {\n    if (obj instanceof Array) {\n      return obj.map(Control.fromObject).reduce((a, b) => a.concat(b), []);\n    }\n    if (typeof obj === 'string') {\n      return [new exports.Command(obj)];\n    }\n    return Object.entries(obj).map((args) => new Control(...args));\n  }\n}\n\nexports.Command = class Command extends String\n{\n  constructor (command)\n  {\n    super(command);\n  }\n}\n",
    "static": true,
    "longname": "/mnt/fast/Projects/scripteasy/src/control.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "Control",
    "memberof": "src/control.js",
    "static": true,
    "longname": "src/control.js~Control",
    "access": "public",
    "export": true,
    "importPath": "scripteasy/src/control.js",
    "importStyle": "{Control}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/control.js~Control",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/control.js~Control#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "type",
    "memberof": "src/control.js~Control",
    "static": false,
    "longname": "src/control.js~Control#type",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "commands",
    "memberof": "src/control.js~Control",
    "static": false,
    "longname": "src/control.js~Control#commands",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "fromObject",
    "memberof": "src/control.js~Control",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/control.js~Control.fromObject",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Command",
    "memberof": "src/control.js",
    "static": true,
    "longname": "src/control.js~Command",
    "access": "public",
    "export": true,
    "importPath": "scripteasy/src/control.js",
    "importStyle": "{Command}",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false,
    "extends": [
      "String"
    ]
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/control.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/control.js~Command#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/script.js",
    "content": "const path = require('path');\nconst {execSync} = require('child_process');\nconst {Control, Command} = require('./control');\n\n/**\n * A class that represents the commands, control flow, and context of a singe\n * script.\n */\nmodule.exports = class Script\n{\n  /**\n   * Creates a new Script instance.\n   *\n   * @param {Scripteasy} st - The parent Scripteasy instance.\n   * @param {object} [opts = {}] - The script configuration options.\n   * @param {Array<string> | string} [opts.try = []] - The main script commands.\n   * @param {Array<string> | string} [opts.catch = []] - The catch block\n   * commands that will run if the try block fails.\n   * @param {Array<string> | string} [opts.finally = []] - The finally block\n   * commands that will always run after the try/ctch blocks.\n   * @param {string} [opts.cwd = process.cwd()] - The current working dir the\n   * script should run in.\n   * @param {object} [opts.env = {}] - The environment variables to pass in.\n   * These will not override environment variables in the current context.\n   */\n  constructor (st, opts = {})\n  {\n    /** @type {Scripteasy} */\n    this.st = st;\n\n    const {cwd = process.cwd(), env = process.env, ...controls} = opts;\n\n    env.PATH = Script._binPath(cwd, env.PATH);\n\n    this.cwd = cwd;\n\n    this.env = env;\n\n    this.controls = Control.fromObject(controls);\n\n    // /** @type {Array<string>} */\n    // this.try = [].concat(opts.try||[]);\n\n    // /** @type {Array<string>} */\n    // this.catch = [].concat(opts.catch||[]);\n\n    // /** @type {Array<string>} */\n    // this.finally = [].concat(opts.finally||[]);\n\n    // /** @type {string} */\n    // this.cwd = opts.cwd || process.cwd();\n\n    // /** @type {object} */\n    // this.env = {...opts.env, ...process.env};\n\n    // this.env.PATH = path.resolve(this.cwd, 'node_modules', '.bin') + path.delimiter + this.env.PATH;\n  }\n\n  /**\n   * Runs the script.\n   * @param {Array<string>} [args] - The args to pass into the command.\n   * @return {Error?} - If an error occurs, the error is returned.\n   */\n  run (args)\n  {\n    // return this._execTry(args);\n    return this._execControls(this.controls);\n  }\n\n  _execControls (controls, args)\n  {\n    let err = false;\n    let ctx = null;\n    for (let control of controls) {\n      if (control instanceof Command) {\n        ctx = null;\n        if (err = this._exec(control, args)) break;\n        continue;\n      }\n      if (ctx == null && control.type === 'try') {\n        ctx = 'try';\n        err = this._execControls(control.commands, args);\n        continue;\n      }\n      if (err && ctx === 'try' && control.type === 'catch') {\n        ctx = 'catch';\n        if (err = this._execControls(control.commands, args)) break;\n        continue;\n      }\n      if ((ctx === 'try' || ctx === 'catch') && control.type === 'finally') {\n        ctx = null;\n        if (err = this._execControls(control.commands, args)) break;\n        continue;\n      }\n\n      if (ctx == null && control.type === 'if') {\n        ctx = 'if';\n        err = this._execControls(control.commands, args);\n        continue;\n      }\n      if (err && (ctx == 'if' || ctx == 'elseif') && control.type === 'elseif') {\n        ctx = control.type;\n        err = this._execControls(control.commands, args);\n        continue;\n      }\n      if (!err && (ctx === 'if' || ctx === 'elseif') && control.type === 'then') {\n        ctx = 'then';\n        if (err = this._execControls(control.commands, args)) break;\n        continue;\n      }\n      if (err && (ctx === 'if' || ctx === 'elseif') && control.type === 'else') {\n        ctx = null;\n        if (err = this._execControls(control.commands, args)) break;\n        continue;\n      }\n    }\n    return err;\n  }\n\n  _execCommands (commands, args)\n  {\n    let err = false;\n    for (let command of commands) {\n      if (err = this._exec(command, args)) break;\n    }\n    return err;\n  }\n\n  /**\n   * Executes a single command.\n   * @param {string} command The command to execute.\n   * @param {Array<string>} [args] - The args to pass into the command.\n   * @return {Error?} - If an error occurs, the error is returned.\n   */\n  _exec (command, args)\n  {\n    command = command.toString();\n\n    if (command in this.st.scripts) {\n      return this.st.run(command);\n    }\n    return Script.exec(command, args, this.cwd, this.env);\n  }\n\n  /**\n   * Executes the script's try block. On error the catch block is invoked.\n   * After everything (error or no) the finally block is invoked.\n   * @param {Array<string>} [args] - The args to pass into the command.\n   * @return {Error?} - If an error occurs, the error is returned.\n   */\n  _execTry (args)\n  {\n    let result = null;\n    for (let command of this.try) {\n      if (result = this._exec(command, args)) {\n        this._execCatch(args);\n        break;\n      }\n    }\n    this._execFinally(args);\n    return result;\n  }\n\n  /**\n   * Executes the catch block.\n   */\n  _execCatch (args)\n  {\n    for (let command of this.catch) {\n      if (this._exec(command, args)) return;\n    }\n  }\n\n  /**\n   * Executes the finally block.\n   */\n  _execFinally (args)\n  {\n    for (let command of this.finally) {\n      if (this._exec(command, args)) return;\n    }\n  }\n\n  /**\n   * Executes a single command with the given args, cwd, and env\n   * @param {string} command The command to execute.\n   * @param {Array<string>} [args] - The args to pass into the command.\n   * @param {string} [cwd = process.cwd()] - The current working directory.\n   * @param {object} [env = process.env] - The environment variables to execute\n   * the command with.\n   * @return {Error?} - If an error occurs, the error is returned.\n   */\n  static exec (command, args, cwd = process.cwd(), env = process.env)\n  {\n    env = {...env};\n    env.PATH = Script._binPath(cwd, env.PATH);\n\n    if (args) {\n      command = Script._interpolateArgs(command, args);\n    }\n\n    try {\n      execSync(command, {\n        cwd,\n        env,\n        stdio: [0,1,2],\n      });\n    }\n    catch (err) {\n      return err;\n    }\n  }\n\n  /**\n   * Replaces the environment variable invocations in a script, such as\n   * `$MYVAR` with the value in the script's environment.\n   * @param {string} command - The command to have the env vars replaced in.\n   * @param {object} env - A map of the env vars to use.\n   * @returns {string} - The command after env vars have been interpolated.\n   */\n  static _interpolateEnv (command, env)\n  {\n    return command.replace(/\\$([a-zA-Z][a-zA-Z0-9_]+)/g, (_, p1) => env[p1]);\n  }\n\n  /**\n   * Replaces args placeholders with the arg values.\n   * @param {string} command - The command to have the args replaced in.\n   * @param {Array<string>} args - An array of args.\n   * @returns {string} - The command after args have been interpolated.\n   */\n  static _interpolateArgs (command, args)\n  {\n    return command\n      .replace(/\\$@/g, args.join(' '))\n      .replace(/\\$\\d+/g, (match) => {\n        const idx = Number(match.replace(/\\$/, ''));\n        return args[idx] || '';\n      });\n  }\n\n  /**\n   * Adds the local node_modules/.bin to the current PATH env var.\n   * @param {string} cwd - The current working directory where node_modules exists.\n   * @param {string} PATH - The current PATH env var.\n   * @returns {string} - The updated PATH env var.\n   */\n  static _binPath (cwd, PATH)\n  {\n    return path.resolve(cwd, 'node_modules', '.bin') + path.delimiter + PATH;\n  }\n}\n",
    "static": true,
    "longname": "/mnt/fast/Projects/scripteasy/src/script.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "class",
    "name": "Script",
    "memberof": "src/script.js",
    "static": true,
    "longname": "src/script.js~Script",
    "access": "public",
    "export": true,
    "importPath": "scripteasy/src/script.js",
    "importStyle": "Script",
    "description": "A class that represents the commands, control flow, and context of a singe\nscript.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 68,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#constructor",
    "access": "public",
    "description": "Creates a new Script instance.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Scripteasy"
        ],
        "spread": false,
        "optional": false,
        "name": "st",
        "description": "The parent Scripteasy instance."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "opts",
        "description": "The script configuration options."
      },
      {
        "nullable": null,
        "types": [
          "Array<string> ",
          " string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " []",
        "defaultRaw": [],
        "name": "opts.try",
        "description": "The main script commands."
      },
      {
        "nullable": null,
        "types": [
          "Array<string> ",
          " string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " []",
        "defaultRaw": [],
        "name": "opts.catch",
        "description": "The catch block\ncommands that will run if the try block fails."
      },
      {
        "nullable": null,
        "types": [
          "Array<string> ",
          " string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " []",
        "defaultRaw": [],
        "name": "opts.finally",
        "description": "The finally block\ncommands that will always run after the try/ctch blocks."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " process.cwd()",
        "defaultRaw": " process.cwd()",
        "name": "opts.cwd",
        "description": "The current working dir the\nscript should run in."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "opts.env",
        "description": "The environment variables to pass in.\nThese will not override environment variables in the current context."
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "st",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#st",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Scripteasy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "cwd",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#cwd",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "env",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#env",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "controls",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#controls",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "run",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#run",
    "access": "public",
    "description": "Runs the script.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The args to pass into the command."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error?"
      ],
      "spread": false,
      "description": "If an error occurs, the error is returned."
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "_execControls",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_execControls",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "controls",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "_execCommands",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_execCommands",
    "access": "private",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "ignore": true,
    "params": [
      {
        "name": "commands",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "_exec",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_exec",
    "access": "private",
    "description": "Executes a single command.",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to execute."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The args to pass into the command."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error?"
      ],
      "spread": false,
      "description": "If an error occurs, the error is returned."
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "_execTry",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_execTry",
    "access": "private",
    "description": "Executes the script's try block. On error the catch block is invoked.\nAfter everything (error or no) the finally block is invoked.",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The args to pass into the command."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error?"
      ],
      "spread": false,
      "description": "If an error occurs, the error is returned."
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "_execCatch",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_execCatch",
    "access": "private",
    "description": "Executes the catch block.",
    "lineNumber": 167,
    "ignore": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "_execFinally",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#_execFinally",
    "access": "private",
    "description": "Executes the finally block.",
    "lineNumber": 177,
    "ignore": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "exec",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/script.js~Script.exec",
    "access": "public",
    "description": "Executes a single command with the given args, cwd, and env",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to execute."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The args to pass into the command."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " process.cwd()",
        "defaultRaw": " process.cwd()",
        "name": "cwd",
        "description": "The current working directory."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " process.env",
        "defaultRaw": " process.env",
        "name": "env",
        "description": "The environment variables to execute\nthe command with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error?"
      ],
      "spread": false,
      "description": "If an error occurs, the error is returned."
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "_interpolateEnv",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/script.js~Script._interpolateEnv",
    "access": "private",
    "description": "Replaces the environment variable invocations in a script, such as\n`$MYVAR` with the value in the script's environment.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - The command after env vars have been interpolated."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to have the env vars replaced in."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "env",
        "description": "A map of the env vars to use."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The command after env vars have been interpolated."
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "_interpolateArgs",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/script.js~Script._interpolateArgs",
    "access": "private",
    "description": "Replaces args placeholders with the arg values.",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - The command after args have been interpolated."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to have the args replaced in."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "An array of args."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The command after args have been interpolated."
    },
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "_binPath",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/script.js~Script._binPath",
    "access": "private",
    "description": "Adds the local node_modules/.bin to the current PATH env var.",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - The updated PATH env var."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cwd",
        "description": "The current working directory where node_modules exists."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "PATH",
        "description": "The current PATH env var."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The updated PATH env var."
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/scripteasy.js",
    "content": "/**\n * The main scripteasy class. It serves as an entry point into scripteasy's\n * primary functionality.\n */\nmodule.exports = class Scripteasy\n{\n  /**\n   * Creates a new Scripteasy instance.\n   * @param {object} scripts - A map of scripts keyed by name. Each top level\n   * value is passed into the `Script` constructor as either the whole `opts`\n   * object or as the `opts.try` value.\n   */\n  constructor (scripts)\n  {\n    /** @type {Array<Script>} */\n    this.scripts = this.parseScripts(scripts);\n  }\n\n  /**\n   * Parses the scripts for a new Scripteasy instance.\n   * @param {object} scripts - A map of scripts.\n   * @returns {Array<Script>} - The parsed scripts.\n   */\n  parseScripts (scripts)\n  {\n    const Script = require('./script');\n    const result = {};\n    for (let name in scripts) {\n      const script = scripts[name];\n      if (Object.is(script.constructor, Object)) {\n        result[name] = new Script(this, script);\n        continue;\n      }\n\n      result[name] = new Script(this, {try: script});\n    }\n    return result;\n  }\n\n  /**\n   * Reads scripts from a file and generates a new Scripteasy instance using\n   * those scripts.\n   * @param {string} filename - The name of the file.\n   * @returns {Scripteasy} - A new Scripteasy instance.\n   */\n  static fromFile (filename)\n  {\n    const fs = require('fs');\n    const path = require('path');\n    let scripts = {};\n\n    if (['.yml', '.yaml'].indexOf(path.extname(filename)) > -1) {\n      const yaml = require('yaml');\n      const data = fs.readFileSync(filename).toString();\n      scripts = yaml.eval(data);\n    }\n    else {\n      scripts = require(path.resolve(process.cwd(), filename));\n    }\n    return new Scripteasy(scripts);\n  }\n\n  /**\n   * Runs a script by name.\n   * @param {string} name - The name of the script to run.\n   * @param {Array<string>} [args] - The args to pass into the script.\n   * @return {Error?} - If an error occurs, the error is returned.\n   */\n  run (name, args)\n  {\n    if (name in this.scripts) {\n      return this.scripts[name].run(args);\n    }\n    const Script = require('./script');\n    return Script.exec(`${name} $@`, args);\n  }\n}\n",
    "static": true,
    "longname": "/mnt/fast/Projects/scripteasy/src/scripteasy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "Scripteasy",
    "memberof": "src/scripteasy.js",
    "static": true,
    "longname": "src/scripteasy.js~Scripteasy",
    "access": "public",
    "export": true,
    "importPath": "scripteasy",
    "importStyle": "Scripteasy",
    "description": "The main scripteasy class. It serves as an entry point into scripteasy's\nprimary functionality.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/scripteasy.js~Scripteasy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scripteasy.js~Scripteasy#constructor",
    "access": "public",
    "description": "Creates a new Scripteasy instance.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scripts",
        "description": "A map of scripts keyed by name. Each top level\nvalue is passed into the `Script` constructor as either the whole `opts`\nobject or as the `opts.try` value."
      }
    ]
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "scripts",
    "memberof": "src/scripteasy.js~Scripteasy",
    "static": false,
    "longname": "src/scripteasy.js~Scripteasy#scripts",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Array<Script>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "parseScripts",
    "memberof": "src/scripteasy.js~Scripteasy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scripteasy.js~Scripteasy#parseScripts",
    "access": "public",
    "description": "Parses the scripts for a new Scripteasy instance.",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array<Script>} - The parsed scripts."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "scripts",
        "description": "A map of scripts."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Script>"
      ],
      "spread": false,
      "description": "The parsed scripts."
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "fromFile",
    "memberof": "src/scripteasy.js~Scripteasy",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/scripteasy.js~Scripteasy.fromFile",
    "access": "public",
    "description": "Reads scripts from a file and generates a new Scripteasy instance using\nthose scripts.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Scripteasy} - A new Scripteasy instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "The name of the file."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scripteasy"
      ],
      "spread": false,
      "description": "A new Scripteasy instance."
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "run",
    "memberof": "src/scripteasy.js~Scripteasy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/scripteasy.js~Scripteasy#run",
    "access": "public",
    "description": "Runs a script by name.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the script to run."
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The args to pass into the script."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error?"
      ],
      "spread": false,
      "description": "If an error occurs, the error is returned."
    }
  },
  {
    "kind": "index",
    "content": "# scripteasy\n\n[![npm (scoped)](https://img.shields.io/npm/v/scripteasy.svg)](https://www.npmjs.com/package/scripteasy)\n[![Docs Status](https://aldlevine.github.io/scripteasy/badge.svg)](https://aldlevine.github.io/scripteasy/source.html)\n\nThe easy script runner\n\n## Where?\n\n```\nnpm i scripteasy\n```\n\n## What?\n\nscripteasy is an easy way to write and run npm scripts. Scripts can be housed in\nthe `package.json` or a separate JS/JSON or YAML file (and then specified in the\n`package.json`).\n\n## Why?\n\nSometimes a full blown task runner (Gulp, taskr, et al) is more than a project\ncalls for. While they can provide fast and powerful tools, the overhead and\ndependency limitations can sometimes make them undesireable. Npm scripts can\nserve as a quick and dirty, and (due to the power of shell scripting)\nsurpisingly capable tool. However, npm scripts can get ugly (linebreak much?),\nthey need special care to call themselves cross platform compatible\n(particularly when dealing with env vars), and they have no simple approach to\nmanage control flow.\n\nThe goal of scripteasy is to bring the flexibility and portability of a fully\nfledged task runner into the world of npm scripts and make scripting itself more\nintuitive and, dare we say it, fun!\n\n## How?\n\n### Like JSON?\n\nThen add your scripts directly to your `package.json`,\n\n```json\n{\n  \"scripteasy\": {\n    \"build\": [ \"test\", \"docs\" ],\n    \"precommit\": {\n      \"try\": [\n        \"git stash save --keep-index -q \\\"precommit stash\\\"\",\n        \"build\",\n        \"git add docs\"\n      ],\n      \"catch\": \"echo \\\"something went wrong!\\\"\",\n      \"finally\": [\n        \"git stash pop --index -q\",\n        \"echo \\\"All done!\\\"\"\n      ]\n    },\n    \"test\": \"nyc mocha\",\n    \"docs\": \"esdoc\"\n  }\n}\n```\n\nor create a separate JSON file and reference it in your `package.json`.\n\n```json\n{\n  \"scripteasy\": \"scripts.json\"\n}\n```\n\n### Like JS?\n\nThen create an external JS file,\n\n```javascript\nexports.build = [ 'test', 'docs' ];\n\nexports.precommit = {\n  try: [\n    'git stash save --keep-index -q \"precommit stash\"',\n    'build',\n    'git add docs',\n  ],\n  catch: 'echo \"something went wrong!\"',\n  finally: [\n    'git stash pop --index -q',\n    'echo \"All done!\"',\n  ],\n};\n\nexports.test = 'nyc mocha';\n\nexports.docs = 'esdoc';\n```\n\nand add **that** to your `package.json`.\n\n```json\n{\n  \"scripteasy\": \"scripts.js\"\n}\n```\n\n### Like YAML?\n\nThen (I think you know where this is going) create an external YAML file\n\n```yaml\nbuild:\n  - test\n  - docs\n\nprecommit:\n  try:\n    - git stash save --keep-index -q \"precommit stash\"\n    - build\n    - git add docs\n  catch: echo \"something went wrong!\"\n  finally:\n    - git stash pop --index -q\n    - echo \"All done!\"\n\ntest: nyc mocha\n\ndocs: esdoc\n```\n\n> If it is possible to cut a word out, always cut it out.\n> -- <cite>George Orwell</cite>\n\n... yada yada yada, `package.json`\n\n```json\n{\n  \"scripteasy\": \"scripts.yml\"\n}\n```\n\n### Like actually running your scripts?\n\n#### Try the CLI\n\n```\nez build\n```\n\n```\nez test -- docs\n```\n\n#### Take a look at a hook\n\n```json\n{\n  \"scripts\": {\n    \"precommit\": \"ez precommit\"\n  }\n}\n```\n\n### Like npx?\n\nUse scripteasy to run local CLI commands\n\n```\nez nyc mocha\n```\n\n```\nez comp update -- browserify index.js\n```\n\nor any other command (but why?)\n\n```\nez echo \"why would anyone do this?\"\n```\n\n### Psst!\n\n###### *Wanna know a secret?*\n\nSpecify your env vars as a property.\n\n```json\n{\n  \"scripteasy\": {\n    \"sayyes\": {\n      \"try\": \"echo \\\"$YES\\\"\",\n      \"env\": { \"YES\": \"If you say so\" }\n    }\n  }\n}\n```\n\n```\n$ ez sayyes\n> If you say so\n$ YES=no ez sayyes\n> no\n```\n\nAlso, pass in your CLI args however you want using a common bashism.\n\n```json\n{\n  \"scripteasy\": {\n    \"first\": \"echo $0\",\n    \"second\": \"echo $1\",\n    \"all\": \"echo \\\"$@\\\"\"\n  }\n}\n```\n\n```\n$ ez first hello world\n> hello\n$ ez second hello world\n> world\n$ ez all hello world\n> hello world\n$ ez first hello world -- second hello world -- all hello world\n> hello\n> world\n> hello world\n```\n\n## Who?\n\nYou?\n\n## When?\n\nWhy not now?\n\n",
    "longname": "/mnt/fast/Projects/scripteasy/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"scripteasy\",\n  \"version\": \"0.1.0-0\",\n  \"description\": \"The easy script runner\",\n  \"keywords\": [\n    \"automation\",\n    \"build\",\n    \"build system\",\n    \"cli\",\n    \"npm\",\n    \"npm scripts\",\n    \"scripts\",\n    \"task\",\n    \"task runner\"\n  ],\n  \"homepage\": \"https://github.com/Aldlevine/scripteasy#readme\",\n  \"bugs\": { \"url\": \"https://github.com/Aldlevine/scripteasy/issues\" },\n  \"license\": \"MIT\",\n  \"author\": \"Aaron Levine <ald.levine@gmail.com>\",\n  \"main\": \"src/scripteasy.js\",\n  \"bin\": { \"ez\": \"./src/cli.js\" },\n  \"directories\": { \"doc\": \"docs\", \"test\": \"test\" },\n  \"repository\": { \"type\": \"git\", \"url\": \"git+https://github.com/Aldlevine/scripteasy.git\" },\n  \"scripts\": {\n    \"build\": \"node src/cli.js build\",\n    \"precommit\": \"node src/cli.js precommit\",\n    \"commitmsg\": \"node src/cli.js commitmsg\",\n    \"docs\": \"node src/cli.js docs\",\n    \"link\": \"node src/cli.js link\",\n    \"test\": \"node src/cli.js test\",\n    \"update\": \"node ./src/cli.js update\",\n    \"version\": \"node ./src/cli.js version\"\n  },\n  \"config\": { \"commitizen\": { \"path\": \"./node_modules/cz-conventional-changelog\" } },\n  \"dependencies\": { \"minimist\": \"^1.2.0\", \"yaml\": \"^0.3.0\" },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^4.3.0\",\n    \"@commitlint/config-angular\": \"^4.3.0\",\n    \"chai\": \"^4.1.2\",\n    \"comptroller\": \"^0.3.0\",\n    \"conventional-changelog-cli\": \"^1.3.4\",\n    \"cz-conventional-changelog\": \"^2.1.0\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-node\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"husky\": \"^0.14.3\",\n    \"mocha\": \"^4.0.1\",\n    \"nyc\": \"^11.3.0\"\n  },\n  \"comptroller\": {\n    \"source\": \"src/**/*\",\n    \"dev\": \"test/**/*\",\n    \"pretty\": 80,\n    \"detective\": { \"parse\": { \"plugins\": [ \"objectRestSpread\" ] } }\n  },\n  \"scripteasy\": \"scripts.yml\"\n}",
    "longname": "/mnt/fast/Projects/scripteasy/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]